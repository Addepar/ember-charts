{{!-- To add shadow main-content-container-shadow --}}
<div class="col-md-10 col-md-offset-2 left-border main-content-container">
  <h1>Ember Charts API</h1>
  <h2>Time-series-chart Options</h2>
  <table class="table ember-charts-options">
    <tr>
      <th style="width: 200px;">Option</th>
      <th style="width: 150px;">Default</th>
      <th>Description</th>
    </tr>
    <tr>
      <td>barData</td>
      <td>undefined</td>
      <td>
        <p>Time series data to be represented by bars.  This is an array of
        data points.  Each data point is an object with at least three fields:
        <em>time</em>, <em>value</em>, and <em>label</em>.  The time field
        contains a JavaScript Date.  The value field is a Number.  The label
        field indicates which group (series) a data point belongs to.  Example:</p>
        <div class="highlight">
<pre class="prettyprint lang-js">// average high temperature (degrees F) by city
[
  {
    date: new Date(2013, 05, 01),
    value: 64,
    label: 'San Francisco'
  },
  {
    date: new Date(2013, 05, 01),
    value: 93,
    label: 'Phoenix'
  },
  {
    date: new Date(2013, 06, 01),
    value: 66,
    label: 'San Francisco'
  },
  {
    date: new Date(2013, 06, 01),
    value: 103,
    label: 'Phoenix'
  },
  ...
]</pre>
        </div>
      </td>
    </tr>
    <tr>
      <td>lineData</td>
      <td>undefined</td>
      <td>
        <p>Time series data to be represented by bars.  Format is the same as for
        the <em>barData</em> time series above.</p>
      </td>
    </tr>
    <tr>
      <td>selectedInterval</td>
      <td>M</td>
      <td>
        <p>Interval between ticks on the time axis.  Can be 'D' (days), 'W'
        (weeks), 'M' (months), 'Q' (quarters), or 'Y' (years).</p>
      </td>
    </tr>
    <tr>
      <td>selectedSeedColor</td>
      <td>rgb(65, 65, 65)</td>
      <td>
        <p>Base color that the color palette will be generated from.</p>
      </td>
    </tr>
    <tr>
      <td>timeDelta</td>
      <td>month</td>
      <td>
        <p>The time interval used represented by each group when using grouped
        bars.  Can be 'day', 'week', 'month', 'quarter', 'year'</p>
      </td>
    </tr>
    <tr>
      <td>barPadding</td>
      <td>0</td>
      <td>
        <p>Space between bars, as fraction of total bar + padding space.</p>
      </td>
    </tr>
    <tr>
      <td>barGroupPadding</td>
      <td>0.25</td>
      <td>
        <p>Space between bar groups, as fraction of total bar + padding space.</p>
      </td>
    </tr>
    <tr>
      <td>stackBars</td>
      <td>false</td>
      <td>
        <p>Stacks bars, otherwise it groups them  horizontally.</p>
    </td>
    </tr>
    <tr>
      <td>yAxisFromZero</td>
      <td>false</td>
      <td>
        <p>Force the Y axis to start at zero, instead of the smallest Y value
        provided.</p>
      </td>
    </tr>
  </table>

  <hr>
  <h2>Horizontal-Bar Options</h2>
  <table class="table ember-charts-options">
    <tr>
      <th style="width: 200px;">Option</th>
      <th style="width: 150px;">Default</th>
      <th>Description</th>
    </tr>
    <tr>
      <td>minBarThickness</td>
      <td>20</td>
      <td>
        <p>Miminum bar width in pixels.</p>
      </td>
    </tr>
    <tr>
      <td>maxBarThickness</td>
      <td>60</td>
      <td>
        <p>Maximum bar width in pixels.</p>
      </td>
    </tr>
    <tr>
      <td>selectedSeedColor</td>
      <td>rgb(65, 65, 65)</td>
      <td><p>Base color that the color palette will be generated from.</p>
    </td>
    </tr>
    <tr>
      <td>data</td>
      <td>undefined</td>
      <td>
        <p>Data to be represented by bars.  This is an array of data points.  Each
        data point is an object with at least two fields: <em>value</em>
        (Number), and <em>label</em> (String).</p>
        <div class="highlight">
<pre class="prettyprint lang-js">// Population
[
  {
    value: 825111,
    label: 'San Francisco'
  },
  {
    value: 984299,
    label: 'San Jose'
  },
  {
    value: 400740,
    label: 'Oakland'
  },
  ...
]</pre>
        </div>
      </td>
    </tr>
    <tr>
      <td>selectedSortType</td>
      <td>value</td>
      <td>
        <p>Field from each data point by which the bars will be sorted.</p>
      </td>
    </tr>
  </table>

  <hr>
  <h2>Vertical-Bar Options</h2>
  <table class="table ember-charts-options">
    <tr>
      <th style="width: 200px;">Option</th>
      <th style="width: 150px;">Default</th>
      <th>Description</th>
    </tr>
    <tr>
      <td>maxBarThickness</td>
      <td>60</td>
      <td>
        <p>Maximum bar width in pixels.</p>
      </td>
    </tr>
    <tr>
      <td>selectedSeedColor</td>
      <td>rgb(65, 65, 65)</td>
      <td>
        <p>Base color that the color palette will be generated from.</p>
      </td>
   </tr>
    <tr>
      <td>data</td>
      <td>undefined</td>
      <td>
        <p>Data to be represented by bars.  This is an array of data points.  Each
        data point is an object with at least two fields: <em>value</em>
        (Number), and <em>label</em> (String).  A third field <em>group</em>
        (String) is optional for each data point.  The prescence of the group
        field will group the bars based on the value of this field.</p>
        <div class="highlight">
<pre class="prettyprint lang-js">// percentage absolute return
[
  {
    value: 21.51,
    label: 'Google',
    group: 'Tech'
  },
  {
    value: 10.10,
    label: 'Microsoft',
    group: 'Tech'
  },
  {
    value: 15.32,
    label: 'ExxonMobil',
    group: 'Energy'
  },
  {
    value: -7.11,
    label: 'Schlumberger',
    group: 'Energy'
  },
  ...
]</pre>
        </div>
      </td>
    </tr>
    <tr>
      <td>maxLabelHeight</td>
      <td>50</td>
      <td>
        <p>Space allocated for rotated labels on the bottom of the chart. If labels
        are rotated, they will be extended beyond labelHeight up to
        maxLabelHeight.</p>
      </td>
    </tr>
    <tr>
      <td>withinGroupPadding</td>
      <td>0</td>
      <td>
        <p>Space between bars, as fraction of bar size.</p>
      </td>
    </tr>
    <tr>
      <td>stackBars</td>
      <td>false</td>
      <td>
        <p>Stacks bars, otherwise it groups them  horizontally.</p>
      </td>
    </tr>
  </table>

  <hr>
  <h2>Pie Options</h2>
  <table class="table ember-charts-options">
    <tr>
      <th style="width: 200px;">Option</th>
      <th style="width: 150px;">Default</th>
      <th>Description</th>
    </tr>
    <tr>
      <td>maxRadius</td>
      <td>2000</td>
      <td>
        <p>The maximum size in pixels of the radius of the pie.</p>
      </td>
    </tr>
    <tr>
      <td>minSlicePercent</td>
      <td>5</td>
      <td>
        The smallest slices will be combined into an "Other" slice until no
        slice is smaller than minSlicePercent. "Other" is also guaranteed to be
        larger than minSlicePercent.
      </td>
    </tr>
    <tr>
      <td>maxNumberOfSlices</td>
      <td>8</td>
      <td>
        <p>The maximum number of slices. If the number of slices is greater
        than this then the smallest slices will be combined into an "other"
        slice until there are at most maxNumberOfSlices.</p>
      </td>
    </tr>
    <tr>
      <td>selectedSeedColor</td>
      <td>rgb(65, 65, 65)</td>
      <td>
        <p>Base color that the color palette will be generated from.</p>
      </td>
    </tr>
    <tr>
      <td>selectedSortType</td>
      <td>value</td>
      <td>
        <p>Field from each data point by which the pie-slices will be sorted.</p>
      </td>
    </tr>
    <tr>
      <td>data</td>
      <td>undefined</td>
      <td>
        <p>Data to be represented by pie-slices.  This is an array of data points.
        Each data point is an object with at least two fields: <em>value</em>
        (Number), and <em>label</em> (String).</p>
        <div class="highlight">
<pre class="prettyprint lang-js">// Population
[
  {
  value: 825111,
  label: 'San Francisco'
  },
  {
  value: 984299,
  label: 'San Jose'
  },
  {
  value: 400740,
  label: 'Oakland'
  },
  ...
]</pre>
        </div>
      </td>
    </tr>
  </table>

  <hr>
  <h2>Scatter Options</h2>
  <table class="table ember-charts-options">
    <tr>
      <th style="width: 200px;">Option</th>
      <th style="width: 150px;">Default</th>
      <th>Description</th>
    </tr>
    <tr>
      <td>dotRadius</td>
      <td>7</td>
      <td>
        <p>Size of each icon on the scatter plot.</p>
      </td>
    </tr>
    <tr>
      <td>data</td>
      <td>undefined</td>
      <td>
        <p>Data to be represented by points on a scatter plot.  This is an array of
        data points.  Each data point is an object with at least two fields:
        <em>xValue</em> (Number), and <em>yValue</em> (Number).  XValue and
        yValue correspond to an individual measurement.</p>

        <p>A third field <em>group</em>, indicating the group to which the
        measurement belongs,  is optional.  We display a different icon for each
        group if the number of groups is less than or equal to the maximum
        number of icons.  Otherwise, a standard icon is used for all groups.</p>
        <div class="highlight">
<pre class="prettyprint lang-js">// January minimum temperature in degrees F (yValue)
// by latitude (xValue) and region
[
  {
  "group": "West Coast",
  "xValue": 38.4,
  "yValue": 42
  },
  {
  "group": "Midwest",
  "xValue": 42.3,
  "yValue": 21
  },
  {
  "group": "West Coast",
  "xValue": 34.2,
  "yValue": 47
  },
  {
  "group": "South",
  "xValue": 33.9,
  "yValue": 37
  },
  ...
]</pre>
        </div>
        </code>
      </td>
    </tr>
    <tr>
      <td>selectedSeedColor</td>
      <td>rgb(65, 65, 65)</td>
      <td>
        <p>Base color that the color palette will be generated from.</p>
      </td>
    </tr>
  </table>

  <hr>
  <h2>Bubble Options</h2>
  <table class="table ember-charts-options">
    <tr>
      <th style="width: 200px;">Option</th>
      <th style="width: 150px;">Default</th>
      <th>Description</th>
    </tr>
    <tr>
      <td>data</td>
      <td>undefined</td>
      <td>
        <p>Data to be represented by bubbles in a bubble chart.  This is an array
        of data points.  Each data point is an object with at least two fields:
        <em>value</em> (Number), and <em>label</em> (String).</p>
        <div class="highlight">
<pre class="prettyprint lang-js">// Population
[
  {
    value: 825111,
    label: 'San Francisco'
  },
  {
    value: 984299,
    label: 'San Jose'
  },
  {
    value: 400740,
    label: 'Oakland'
  },
  ...
]</pre>
        </div>
      </td>
    </tr>
    <tr>
      <td>selectedSeedColor</td>
      <td>rgb(65, 65, 65)</td>
      <td>
        <p>Base color that the color palette will be generated from.</p>
      </td>
    </tr>
  </table>
</div>
